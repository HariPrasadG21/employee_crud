<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/tx
                                 http://www.springframework.org/schema/tx/spring-tx.xsd
                                 http://www.springframework.org/schema/mvc
                                 http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- Define the password encoder, user details service, and JWT filter beans -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method="getInstance" />
    <beans:bean id="userDetailsServiceimpl" class="com.sc.service.UserDetailsServiceimpl"/>
    <beans:bean id="jwtAuthenticationFilter" class="com.sc.security.JwtAuthenticationFilter"/>

    <!-- Define the JWT entry point to handle exceptions -->
    <beans:bean id="jwtAuthenticationEntryPoint" class="com.sc.security.JwtAuthenticationEntryPoint"/>
<!--    <beans:bean id="jwtTokenHelper" class="com.sc.security.JwtTokenHelper"/>-->
<!--    <beans:bean id="customFilter" class="com.sc.security.CustomFilter" />-->
<!--    <context:component-scan base-package="com.sc" />-->
    <!-- Security configuration elements -->
<!--    <beans:bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">-->
<!--        <beans:constructor-arg>-->
<!--            <beans:bean class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />-->
<!--        </beans:constructor-arg>-->
<!--    </beans:bean>-->
    <http  auto-config="false" create-session="stateless" entry-point-ref="jwtAuthenticationEntryPoint">
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/userLogin" access="permitAll"/>
        <intercept-url pattern="/register" access="permitAll"/>
        <intercept-url pattern="/home/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="authenticated"/>

        <!-- Configure form login and logout -->
<!--        <form-login login-page="/login" login-processing-url="/userLogin"  authentication-failure-url="/login?error=true"/>-->
        <logout logout-url="/logout" logout-success-url="/login?logout=true" invalidate-session="true" delete-cookies="JSESSIONID"/>

        <!-- Disable CSRF if using JWT as it is inherently stateless -->
        <csrf disabled="true"/>

<!--        <custom-filter ref="customFilter" before="FORM_LOGIN_FILTER" />-->

        <!-- Place the JWT filter in the security chain -->
<!--        <custom-filter ref="jwtAuthenticationFilter" before="FORM_LOGIN_FILTER"/>-->
        <custom-filter ref="jwtAuthenticationFilter" after="SECURITY_CONTEXT_FILTER"/>
<!--        <custom-filter ref="sessionManagementFilter" before="SECURITY_CONTEXT_FILTER"/>-->
    </http>

    <!-- Authentication manager with user details service -->
<!--    <authentication-manager>-->
<!--        <authentication-provider user-service-ref="userDetailsService">-->
<!--            <password-encoder ref="passwordEncoder"/>-->
<!--        </authentication-provider>-->
<!--    </authentication-manager>-->
    <beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="daoAuthenticationProvider"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsServiceimpl"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <!-- MVC annotation-driven and transaction management -->
    <mvc:annotation-driven />
    <tx:annotation-driven />

    <!-- Import additional configuration if needed -->
    <beans:import resource="spring-servlet.xml"/>

</beans:beans>
